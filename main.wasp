app Lovergpt {
  wasp: {
    version: "^0.11.1"
  },
  title: "Lovergpt",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id               Int            @id @default(autoincrement())
    username         String         @unique
    password         String
    partner          VirtualPartner @relation(fields: [virtualPartnerId], references: [id])
    virtualPartnerId Int
psl=}

entity VirtualPartner {=psl
    id          Int              @id @default(autoincrement())
    personality String
    appearance  String
    mood        String
    userId      Int
    logs        InteractionLog[]
    User        User[]
psl=}

entity InteractionLog {=psl
    id               Int             @id @default(autoincrement())
    timestamp        DateTime
    type             String
    content          String
    partnerId        Int
    VirtualPartner   VirtualPartner? @relation(fields: [virtualPartnerId], references: [id])
    virtualPartnerId Int?
psl=}

action createPartner {
  fn: import { createPartner } from "@server/actions.js",
  entities: [User, VirtualPartner]
}

action logInteraction {
  fn: import { logInteraction } from "@server/actions.js",
  entities: [InteractionLog, VirtualPartner]
}

query getPartner {
  fn: import { getPartner } from "@server/queries.js",
  entities: [VirtualPartner]
}

query getInteractions {
  fn: import { getInteractions } from "@server/queries.js",
  entities: [InteractionLog]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: true
}

route CustomizationRoute { path: "/customize", to: CustomizationPage }
page CustomizationPage {
  component: import { Customization } from "@client/pages/Customization.jsx",
  authRequired: true
}